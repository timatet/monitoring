##############################################################
##   Specify the current telegram token of your bot.        ##
##############################################################
token: 1234567890:YOUR-BOT-TOKEN-FROM-BOT-FATHER
##############################################################
##   Set whether extended logging is necessary.             ##
##   Extended logging - logs each check.                    ##
##                                                          ##
##   Context:                                               ##
##   > True   -- Skips duplicate logger messages            ##
##   > False  -- Logs every action                          ##
##############################################################
log_important: False
##############################################################
##   Waiting time between requests in seconds               ##
##############################################################
await_time: 2
##############################################################
## Set the correct delimiter for the time. Possible options ##
## in different systems: comma or dot                       ##
##############################################################
delimiter: .
###############################################################
##   List of chats to which notifications will be sent       ##
##                                                           ##
##   Context:                                                ##
##   > First specify the host                                ##
##   > Come up with a name yourself                          ##
##   > Listen mark:                                          ##
##      False -- the addressee will be ignored               ##
##      True  -- the addressee receives the letters          ##
###############################################################
tg_chats:
  - id: 123456789
    name: Ivan # not necessarily required
    listen: True
###############################################################
##   List of host addresses to check.                        ##
##   Observe the order!                                      ##
##                                                           ##
##   Recommended:                                            ##
##   > 1st is the host of the local network, for example     ##
##     a router. It is used to check access to the local net ##
##   > 2nd preferably a well-known DNS server. It is used    ##
##     to check Internet access                              ##
##   > Then your host names                                  ##
##                                                           ##
##   Context:                                                ##
##   > Come up with a name yourself                          ##
##   > Stop mark:                                            ##
##      0 -- if the host is unavailable, the monitoring      ##
##        service will continue to work                      ##
##      1 -- after the host is unavailable, the monitoring   ##
##        service will stop checking                         ##
##   > Notify:                                               ##
##      True  -- You will receive notifications about        ##
##        errors related to this host                        ##
##      False -- You will NOT receive notifications about    ##
##        errors related to this host.                       ##
###############################################################
ping:
  - host: 192.168.0.1
    name: local network
    stop_after: 1
    notify: False
    priority: 0
  - host: 8.8.8.8
    name: google dns
    stop_after: 1
    notify: True
    priority: 1
  - host: 192.168.0.123
    name: your server host
    stop_after: 0
    notify: True
    priority: 2
  - host: 123.123.123.123
    name: your host
    stop_after: 0
    notify: True
    priority: 3
###############################################################
##   In the curl section, list the host names of the sites   ##
##                                                           ##
##   > States:                                               ##
##      0 -- ignored                                         ##
##      1 -- active                                          ##
##   > Come up with a name yourself                          ##
##   > Set the normal request code for the host              ##
##   > Stop mark:                                            ##
##      0 -- if host is unavailable, the monitoring          ##
##        service will continue to work                      ##
##      1 -- after host is unavailable, the monitoring       ##
##        service will stop checking                         ##
##   > Notify:                                               ##
##      True  -- You will receive notifications about        ##
##        errors related to this host                        ##
##      False -- You will NOT receive notifications about    ##
##        errors related to this host.                       ##
###############################################################
curl:
  - host: domain.org
    name: your host
    http_normal_code: 200
    stop_after: 0
    notify: True
    priority: 0